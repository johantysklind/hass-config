script:

  ####################################################
  #                                                  #
  #                     SCRIPTS                      #
  #                                                  #
  ####################################################

  #=====================MAIN=========================#
  reload_customs:
    alias: Reload devloped code
    mode: single
    sequence:
      - service: input_text.reload
        data: {}
      - service: automation.reload
        data: {}
      - service: script.reload
        data: {}

  helicopter:
    alias: Helicopter
    fields:
      light:
        description: Light entity_id
        example: light.family_room_lamp
      rounds:
        description: Number of times to rotate
    mode: restart
    sequence:
      - repeat:
          count: '{{rounds}}'
          sequence:
            - repeat:
                while:
                  - condition: template
                    value_template: "{{ repeat.index <= state_attr(light,'entity_id') | length }}"
                sequence:
                  - service: light.turn_on
                    data:
                      entity_id: "{{state_attr(light,'entity_id')[repeat.index - 1]}}"
                  - delay:
                      milliseconds: 500        
                  - service: light.turn_off
                    data:
                      entity_id: "{{state_attr(light,'entity_id')[repeat.index - 1]}}"


  test:
    sequence:
      - service: script.turn_on
        entity_id: script.helicopter
        data:
          variables:
            light: light.office_ceiling
            rounds: 3


  #=====================BEDROOM=======================#
  turn_on_light:
    alias: Turn on light
    fields:
      light:
        description: Light entity_id
        example: light.family_room_lamp
      brightness : 
        description: Light entity_id
        example: light.family_room_lamp
    mode: restart
    sequence:
      - service: light.turn_on
        data:
          entity_id: "{{ light }}"
          brightness: "{%if brightness is defined%}{{brightness}}{%else%}255{%endif%}"

          
  turn_off_light:
    alias: Turn off light
    fields:
      light:
        description: Light entity_id
        example: light.family_room_lamp
    mode: restart
    sequence:
      - service: light.turn_off
        data:
          entity_id: "{{ light }}"


          

  ramp_light:
    alias: Ramp Light Brightness
    description: Ramp light brightness up or down
    fields:
      direction:
        description: "Direction to change brightness: up or down"
        example: up
      light:
        description: Light entity_id
        example: light.family_room_lamp
    mode: restart
    sequence:
      - repeat:
          while:
            - condition: template
              value_template: >
                {% set obj = light.split(', ')[0] %}
                {% set br = state_attr(obj, 'brightness')|int(0) %}
                {% set mn = states('input_number.light_minimum')|int %}
                {% set mx = states('input_number.light_maximum')|int %}
                {{ direction == 'up' and br < mx or
                    direction == 'down' and br > mn }}
          sequence:
            - service: light.turn_on
              data_template:
                entity_id: "{{ light}}"
              data:
                brightness: >
                  {% set obj = light.split(', ')[0]  %}
                  {% set br = state_attr(obj, 'brightness')|int(0) %}
                  {% set mn = states('input_number.light_minimum')|int %}
                  {% set mx = states('input_number.light_maximum')|int %}
                  {% set st = states('input_number.light_step')|int %}
                  {% if direction == 'up' %}
                    {{ [br + st, mx]|min }}
                  {% else %}
                    {{ [br - st, mn]|max }}
                  {% endif %}
            - delay:
                milliseconds: "{{ states('input_number.light_delay_ms')|int }}"          

  ramp_light_office:
    alias: Ramp Light Brightness
    description: Ramp light brightness up or down
    fields:
      direction:
        description: "Direction to change brightness: up or down"
        example: up
      light:
        description: Light entity_id
        example: light.family_room_lamp
    mode: restart
    sequence:
      - repeat:
          while:
            - condition: template
              value_template: >
                {% set obj = light.split(', ')[0] %}
                {% set br = state_attr(obj, 'brightness')|int(0) %}
                {% set mn = states('input_number.light_minimum')|int %}
                {% set mx = states('input_number.light_maximum')|int %}
                {{ direction == 'up' and br < mx or
                    direction == 'down' and br > mn }}
          sequence:
            - service: light.turn_on
              data_template:
                entity_id: "{{ light}}"
              data:
                brightness: >
                  {% set obj = light.split(', ')[0]  %}
                  {% set br = state_attr(obj, 'brightness')|int(0) %}
                  {% set mn = states('input_number.light_minimum')|int %}
                  {% set mx = states('input_number.light_maximum')|int %}
                  {% set st = states('input_number.light_step')|int %}
                  {% if direction == 'up' %}
                    {{ [br + st, mx]|min }}
                  {% else %}
                    {{ [br - st, mn]|max }}
                  {% endif %}
            - delay:
                milliseconds: "{{ states('input_number.light_delay_ms')|int }}"          
